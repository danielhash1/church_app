<section class="h-full pt-16 fade-in">
  <div class="mb-20 max-w-7xl mx-auto text-center">
    <h2 class="text-3xl font-bold mb-8">Ministries</h2>

    <% if session[:user_id] %>
      <% user = User.find_by(id: session[:user_id]) %>
      <% if user&.admin? %>
        <%= link_to 'Create a new Ministry +', new_ministry_path, class: "bg-blue-500 cursor-pointer hover:bg-blue-700 text-white font-bold py-3 px-5 rounded focus:outline-none focus:shadow-outline" %>
      <% end %>
    <% end %> 

    <!-- Передаем информацию о том, является ли пользователь администратором -->
    <div id="ministries-list" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8 mt-8" data-admin="<%= user&.admin? ? 'true' : 'false' %>">
      <% @ministries.reverse.each do |ministry| %>
        <div class="ministry-item bg-gray-200 mx-auto p-4 transition duration-200 w-80 ease-in-out rounded-xl cursor-pointer open-modal fade-in" data-modal="modal-<%= ministry.id %>" data-id="<%= ministry.id %>">
          <!-- Изображение министерства -->
          <% if ministry.image.attached? %>
            <%= image_tag ministry.image, class: "h-56 w-80 object-cover rounded-xl", alt: ministry.name %>
          <% else %>
            <%= image_tag('default-image.png', class: "h-56 w-80 object-cover rounded-xl", alt: ministry.name) %>
          <% end %>
          
          <p class="my-2 font-semibold text-lg text-center"><%= ministry.name %></p>
        </div>

        <!-- Модальное окно для каждого министерства -->
        <div id="modal-<%= ministry.id %>" class="modal invisible">
          <div class="modal-content">
            <span class="modal-close">&times;</span>
            <h2 class="text-2xl font-bold"><%= ministry.name %></h2>
            
            <!-- Описание министерства с сохранением переноса строк -->
            <p class="mt-3"><%= simple_format(ministry.description) %></p>
            
            <h4 class="text-xl font-bold mt-6">Schedule</h4>

            <div class="mt-3">
              <%= simple_format(ministry.schedule) %>
            </div>

            <% if session[:user_id] %>
              <% user = User.find_by(id: session[:user_id]) %>
              <% if user&.admin? %>
                <div class="mt-6 flex justify-center mx-auto">
                  <%= link_to 'Edit', edit_ministry_path(ministry), class: 'bg-blue-500 text-white px-4 py-2 rounded-lg mr-2' %>
                  <%= button_to 'Delete', ministry_path(ministry), method: :delete, data: { confirm: 'Are you sure you want to delete this ministry?' }, class: 'bg-red-500 text-white px-4 py-2 rounded-lg' %>
                </div>
              <% end %>
            <% end %>

          </div>
        </div>

      <% end %>
    </div>
  </div>
</section>

<!-- JavaScript для перетаскивания и открытия/закрытия модальных окон -->
<script>
document.addEventListener('DOMContentLoaded', function () {
    // Проверяем, является ли пользователь администратором
    const isAdmin = document.getElementById('ministries-list').getAttribute('data-admin') === 'true';

    // Открытие модального окна для всех пользователей
    const openModals = document.querySelectorAll('.open-modal');
    openModals.forEach(modal => {
        modal.addEventListener('click', function () {
            const modalId = this.getAttribute('data-modal');
            const modalElement = document.getElementById(modalId);
            console.log('Opening modal with ID:', modalId);  // Лог для отладки
            if (modalElement) {
                modalElement.classList.remove('invisible'); // Убираем скрытие модального окна
            } else {
                console.error('Modal not found:', modalId); // Лог, если модальное окно не найдено
            }
        });
    });

    // Закрытие модального окна
    const closeModalElements = document.querySelectorAll('.modal-close');
    closeModalElements.forEach(closeBtn => {
        closeBtn.addEventListener('click', function () {
            this.closest('.modal').classList.add('invisible'); // Прячем модальное окно
        });
    });

    // Закрытие модального окна при клике за его пределами
    const modals = document.querySelectorAll('.modal');
    modals.forEach(modal => {
        modal.addEventListener('click', function (event) {
            if (event.target === this) {
                this.classList.add('invisible'); // Закрытие при клике вне окна
            }
        });
    });

    // Перетаскивание министерств для администратора
    if (isAdmin) {
        const ministriesList = document.getElementById('ministries-list');
        const sortable = new Sortable(ministriesList, {
            handle: '.ministry-item', // Возможность перетаскивать только блоки министерства
            onEnd: function (evt) {
                const sortedIds = sortable.toArray();
                console.log('New order of ministries:', sortedIds);

                // Отправляем новый порядок министерств на сервер
                fetch('/ministries/update_order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                    },
                    body: JSON.stringify({ order: sortedIds })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        console.log('Order updated successfully');
                    } else {
                        console.error('Failed to update order');
                    }
                });
            }
        });
    }

    const ministries = document.querySelectorAll('.ministry-item');
    ministries.forEach((ministry, index) => {
        setTimeout(() => {
            ministry.classList.add('fade-in');
        }, index * 100);
    });
});
</script>

<!-- Стиль для модального окна и перетаскиваемых элементов -->
<style>
/* Стиль для плавного появления элементов */
.fade-in {
    opacity: 0;
    animation: fadeIn 0.6s forwards;
}

@keyframes fadeIn {
    to {
        opacity: 1;
    }
}

/* Стиль для модального окна и перетаскиваемых элементов */
.modal {
    display: flex;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    z-index: 99999;
    overflow-y: none;
    animation: fadeIn 0.6s forwards; /* Плавное появление модального окна */
}

.modal-content {
    margin: auto;
    justify-content: center;
    background-color: white;
    padding: 20px;
    border-radius: 8px;
    position: relative;
    width: 80%;
    max-width: 600px;
    z-index: 1001;
}

.modal-close {
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
    font-size: 24px;
}

.invisible {
    display: none;
}

/* Курсор pointer для министерств */
.ministry-item {
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
}

.ministry-item:hover {
    transform: scale(1.05); /* Легкий эффект увеличения при наведении */
}

/* Убедитесь, что элементы можно перетаскивать */
.ministry-item {
    cursor: grab;
}

.ministry-item:active {
    cursor: grabbing;
}
</style>
