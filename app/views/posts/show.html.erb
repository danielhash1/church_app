<% if @post.images.attached? || @post.video_url.present? %>
  <div class="max-w-2xl mx-auto p-4 h-screen">
    
    <button class="back-button mb-4 py-2 px-4 text-gray-500 rounded hover:text-gray-800" onclick="window.history.back()"><- Back</button>

    <h3 class="text-4xl text-center font-bold mb-2"><%= @post.title %></h3>
    <p class="text-center mb-4"><%= @post.created_at.strftime("%d %B %Y") %></p>

    <div class="mb-4 justify-center flex gap-3">
      <%= link_to "Edit", edit_post_path(@post), class: "bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-700" %>
      <%= link_to "Delete", post_path(@post), method: :delete, data: { confirm: "Are you sure?" }, class: "bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600" %>
    </div>

    <!-- Карусель -->
    <div class="carousel relative">
      <div class="carousel-track-container overflow-hidden w-full">
        <div class="carousel-track flex transition-transform duration-300 ease-in-out rounded-xl">
        
        <% if @post.video_url.present? %>
        <div class="carousel-slide min-w-full flex justify-center items-center bg-black">
          <% video_id = @post.video_url.split("v=").last %>
          <iframe class="rounded-xl carousel-video w-full h-full" 
                  src="https://www.youtube.com/embed/<%= video_id %>" 
                  frameborder="0" 
                  allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" 
                  allowfullscreen>
          </iframe>
        </div>
      <% end %>

          <% if @post.images.attached? %>
            <% @post.images.each do |image| %>
              <div class="carousel-slide min-w-full flex justify-center items-center bg-black">
                <%= image_tag image, class: " carousel-image object-cover w-full max-h-[500px]" %>
              </div>
            <% end %>
          <% end %>
    

        </div>
      </div>
    
      <!-- Кнопки навигации -->
      <% if @post.images.count + (@post.video_url.present? ? 1 : 0) > 1 %>
        <button class="carousel-button carousel-button-left absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded hover:bg-opacity-70">&lt;</button>
        <button class="carousel-button carousel-button-right absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded hover:bg-opacity-70">&gt;</button>
      <% end %>
    </div>
    

    <p class='text-2xl mt-2 font-semibold'>Description</p>

    <div class="post-info mt-4 text-gray-700 text-start">
      <p class="text-md"><%= @post.description %></p>
    </div>
  </div>
<% end %>


<script>
document.addEventListener("DOMContentLoaded", () => {
    const track = document.querySelector(".carousel-track");
    const slides = Array.from(track.children);
    const nextButton = document.querySelector(".carousel-button-right");
    const prevButton = document.querySelector(".carousel-button-left");

    // Если изображений или видео один, скрыть кнопки
    if (slides.length <= 1) {
        if (nextButton) nextButton.style.display = "none";
        if (prevButton) prevButton.style.display = "none";
        return; // Если один слайд, карусель не нужна
    }

    let slideWidth;

    const initializeSlides = () => {
        slideWidth = slides[0].getBoundingClientRect().width;

        // Расположение слайдов
        slides.forEach((slide, index) => {
            slide.style.left = slideWidth * index + "px";
        });

        // Устанавливаем первый слайд как текущий
        slides[0].classList.add("current-slide");
    };

    const moveToSlide = (track, currentSlide, targetSlide) => {
        if (!targetSlide) return;
        track.style.transform = "translateX(-" + targetSlide.style.left + ")";
        currentSlide.classList.remove("current-slide");
        targetSlide.classList.add("current-slide");
    };

    // Кнопка "Вперёд"
    nextButton.addEventListener("click", () => {
        const currentSlide = track.querySelector(".current-slide");
        const nextSlide = currentSlide.nextElementSibling;

        moveToSlide(track, currentSlide, nextSlide);
    });

    // Кнопка "Назад"
    prevButton.addEventListener("click", () => {
        const currentSlide = track.querySelector(".current-slide");
        const prevSlide = currentSlide.previousElementSibling;

        moveToSlide(track, currentSlide, prevSlide);
    });

    // Подождите, пока все изображения загрузятся
    const images = document.querySelectorAll(".carousel-image");
    const promises = Array.from(images).map(img => new Promise(resolve => {
        if (img.complete) resolve();
        else img.onload = resolve;
    }));

    Promise.all(promises).then(() => {
        initializeSlides();
    });

    // Обновляем размеры слайдов при изменении размера окна
    window.addEventListener("resize", () => {
        initializeSlides();
    });
});

</script>